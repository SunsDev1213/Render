{"version":3,"sources":["../node_modules/@mui/lab/TabContext/TabContext.js","../node_modules/@mui/lab/TabList/TabList.js","../node_modules/@mui/lab/TabPanel/tabPanelClasses.js","../node_modules/@mui/material/TablePagination/TablePaginationActions.js","../node_modules/@mui/lab/TabPanel/TabPanel.js","../node_modules/@mui/material/internal/svg-icons/LastPage.js","../node_modules/@mui/material/internal/svg-icons/FirstPage.js","../node_modules/@mui/material/TablePagination/tablePaginationClasses.js","../node_modules/@mui/material/TablePagination/TablePagination.js","hook/training.js","pages/training/components/video/index.js","pages/training/components/pdf/index.js","pages/training/components/tip/index.js","pages/training/index.js"],"names":["Context","React","TabContext","props","children","value","idPrefix","id","setId","Math","round","random","useUniquePrefix","context","_jsx","Provider","useTabContext","getPanelId","getTabId","_excluded","TabList","ref","childrenProp","other","_objectWithoutPropertiesLoose","TypeError","map","child","Tabs","_extends","getTabPanelUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_LastPageIcon","_FirstPageIcon","_KeyboardArrowRight","_KeyboardArrowLeft","_KeyboardArrowLeft2","_KeyboardArrowRight2","_FirstPageIcon2","_LastPageIcon2","TabPanelRoot","styled","name","overridesResolver","styles","root","padding","theme","spacing","TabPanel","inProps","useThemeProps","className","ownerState","classes","composeClasses","useUtilityClasses","tabId","clsx","hidden","role","createSvgIcon","d","TablePaginationActions","backIconButtonProps","count","getItemAriaLabel","nextIconButtonProps","onPageChange","page","rowsPerPage","showFirstButton","showLastButton","useTheme","_jsxs","IconButton","onClick","event","disabled","title","direction","LastPageIcon","FirstPageIcon","color","KeyboardArrowRight","KeyboardArrowLeft","ceil","max","getTablePaginationUtilityClass","_InputBase","tablePaginationClasses","TablePaginationRoot","TableCell","overflow","vars","palette","text","primary","fontSize","typography","pxToRem","TablePaginationToolbar","Toolbar","actions","toolbar","minHeight","paddingRight","breakpoints","up","flexShrink","marginLeft","TablePaginationSpacer","spacer","flex","TablePaginationSelectLabel","selectLabel","body2","TablePaginationSelect","Select","selectIcon","select","input","selectRoot","marginRight","paddingLeft","textAlign","textAlignLast","TablePaginationMenuItem","MenuItem","menuItem","TablePaginationDisplayedRows","displayedRows","defaultLabelDisplayedRows","from","to","defaultGetAriaLabel","type","TablePagination","colSpan","ActionsComponent","colSpanProp","component","labelDisplayedRows","labelRowsPerPage","onRowsPerPageChange","rowsPerPageOptions","SelectProps","MenuItemComponent","native","selectId","useId","labelId","as","length","variant","InputBase","onChange","icon","rowsPerPageOption","_createElement","isHostComponent","key","label","min","AddVideo","data","axios","post","backend_base_url","response","console","log","AddPdf","AddTip","columns","minWidth","align","format","toFixed","Video","dispatch","useDispatch","useState","setPage","setRowsPerPage","setName","url","setUrl","description","setDescription","training","useSelector","state","useEffect","getAllVideo","Grid","container","item","xs","Paper","sx","width","TableContainer","maxHeight","Table","stickyHeader","TableHead","TableRow","column","style","TableBody","videos","slice","row","hover","tabIndex","newPage","target","display","Box","Typography","e","rows","Stack","Button","then","res","success","showAlert","message","msg","severity","size","PDF","file","setFile","hiddenFileInput","useRef","getAllPdf","pdfs","current","click","undefined","files","submitData","FormData","append","position","top","left","transform","bgcolor","border","boxShadow","pt","px","pb","Tip","open","setOpen","setTitle","subTitle","setSubTitle","content","setContent","handleClose","getAllTip","marginTop","tips","Modal","onClose","Training","tab","setTab","MainCard","borderBottom","borderColor","newValue","Tab"],"mappings":"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","file":"static/js/8.82d15cea.chunk.js","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\n/**\n * @type {React.Context<{ idPrefix: string; value: string } | null>}\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Context = /*#__PURE__*/React.createContext(null);\n\nif (process.env.NODE_ENV !== 'production') {\n  Context.displayName = 'TabContext';\n}\n\nfunction useUniquePrefix() {\n  const [id, setId] = React.useState(null);\n  React.useEffect(() => {\n    setId(`mui-p-${Math.round(Math.random() * 1e5)}`);\n  }, []);\n  return id;\n}\n\nexport default function TabContext(props) {\n  const {\n    children,\n    value\n  } = props;\n  const idPrefix = useUniquePrefix();\n  const context = React.useMemo(() => {\n    return {\n      idPrefix,\n      value\n    };\n  }, [idPrefix, value]);\n  return /*#__PURE__*/_jsx(Context.Provider, {\n    value: context,\n    children: children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? TabContext.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The value of the currently selected `Tab`.\n   */\n  value: PropTypes.string.isRequired\n} : void 0;\n/**\n * @returns {unknown}\n */\n\nexport function useTabContext() {\n  return React.useContext(Context);\n}\nexport function getPanelId(context, value) {\n  const {\n    idPrefix\n  } = context;\n\n  if (idPrefix === null) {\n    return null;\n  }\n\n  return `${context.idPrefix}-P-${value}`;\n}\nexport function getTabId(context, value) {\n  const {\n    idPrefix\n  } = context;\n\n  if (idPrefix === null) {\n    return null;\n  }\n\n  return `${context.idPrefix}-T-${value}`;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport { useTabContext, getTabId, getPanelId } from '../TabContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst TabList = /*#__PURE__*/React.forwardRef(function TabList(props, ref) {\n  const {\n    children: childrenProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const context = useTabContext();\n\n  if (context === null) {\n    throw new TypeError('No TabContext provided');\n  }\n\n  const children = React.Children.map(childrenProp, child => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      // SOMEDAY: `Tabs` will set those themselves\n      'aria-controls': getPanelId(context, child.props.value),\n      id: getTabId(context, child.props.value)\n    });\n  });\n  return /*#__PURE__*/_jsx(Tabs, _extends({}, other, {\n    ref: ref,\n    value: context.value,\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabList.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A list of `<Tab />` elements.\n   */\n  children: PropTypes.node\n} : void 0;\nexport default TabList;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTabPanelUtilityClass(slot) {\n  return generateUtilityClass('MuiTabPanel', slot);\n}\nconst tabPanelClasses = generateUtilityClasses('MuiTabPanel', ['root']);\nexport default tabPanelClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n\nvar _LastPageIcon, _FirstPageIcon, _KeyboardArrowRight, _KeyboardArrowLeft, _KeyboardArrowLeft2, _KeyboardArrowRight2, _FirstPageIcon2, _LastPageIcon2;\n\nconst _excluded = [\"backIconButtonProps\", \"count\", \"getItemAriaLabel\", \"nextIconButtonProps\", \"onPageChange\", \"page\", \"rowsPerPage\", \"showFirstButton\", \"showLastButton\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport useTheme from '../styles/useTheme';\nimport IconButton from '../IconButton';\nimport LastPageIcon from '../internal/svg-icons/LastPage';\nimport FirstPageIcon from '../internal/svg-icons/FirstPage';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TablePaginationActions = /*#__PURE__*/React.forwardRef(function TablePaginationActions(props, ref) {\n  const {\n    backIconButtonProps,\n    count,\n    getItemAriaLabel,\n    nextIconButtonProps,\n    onPageChange,\n    page,\n    rowsPerPage,\n    showFirstButton,\n    showLastButton\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const theme = useTheme();\n\n  const handleFirstPageButtonClick = event => {\n    onPageChange(event, 0);\n  };\n\n  const handleBackButtonClick = event => {\n    onPageChange(event, page - 1);\n  };\n\n  const handleNextButtonClick = event => {\n    onPageChange(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = event => {\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: ref\n  }, other, {\n    children: [showFirstButton && /*#__PURE__*/_jsx(IconButton, {\n      onClick: handleFirstPageButtonClick,\n      disabled: page === 0,\n      \"aria-label\": getItemAriaLabel('first', page),\n      title: getItemAriaLabel('first', page),\n      children: theme.direction === 'rtl' ? _LastPageIcon || (_LastPageIcon = /*#__PURE__*/_jsx(LastPageIcon, {})) : _FirstPageIcon || (_FirstPageIcon = /*#__PURE__*/_jsx(FirstPageIcon, {}))\n    }), /*#__PURE__*/_jsx(IconButton, _extends({\n      onClick: handleBackButtonClick,\n      disabled: page === 0,\n      color: \"inherit\",\n      \"aria-label\": getItemAriaLabel('previous', page),\n      title: getItemAriaLabel('previous', page)\n    }, backIconButtonProps, {\n      children: theme.direction === 'rtl' ? _KeyboardArrowRight || (_KeyboardArrowRight = /*#__PURE__*/_jsx(KeyboardArrowRight, {})) : _KeyboardArrowLeft || (_KeyboardArrowLeft = /*#__PURE__*/_jsx(KeyboardArrowLeft, {}))\n    })), /*#__PURE__*/_jsx(IconButton, _extends({\n      onClick: handleNextButtonClick,\n      disabled: count !== -1 ? page >= Math.ceil(count / rowsPerPage) - 1 : false,\n      color: \"inherit\",\n      \"aria-label\": getItemAriaLabel('next', page),\n      title: getItemAriaLabel('next', page)\n    }, nextIconButtonProps, {\n      children: theme.direction === 'rtl' ? _KeyboardArrowLeft2 || (_KeyboardArrowLeft2 = /*#__PURE__*/_jsx(KeyboardArrowLeft, {})) : _KeyboardArrowRight2 || (_KeyboardArrowRight2 = /*#__PURE__*/_jsx(KeyboardArrowRight, {}))\n    })), showLastButton && /*#__PURE__*/_jsx(IconButton, {\n      onClick: handleLastPageButtonClick,\n      disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n      \"aria-label\": getItemAriaLabel('last', page),\n      title: getItemAriaLabel('last', page),\n      children: theme.direction === 'rtl' ? _FirstPageIcon2 || (_FirstPageIcon2 = /*#__PURE__*/_jsx(FirstPageIcon, {})) : _LastPageIcon2 || (_LastPageIcon2 = /*#__PURE__*/_jsx(LastPageIcon, {}))\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/material-ui/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   *\n   * @param {string} type The link or button type to format ('page' | 'first' | 'last' | 'next' | 'previous'). Defaults to 'page'.\n   * @param {number} page The page number to format.\n   * @returns {string}\n   */\n  getItemAriaLabel: PropTypes.func.isRequired,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/material-ui/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n\n  /**\n   * If `true`, show the first-page button.\n   */\n  showFirstButton: PropTypes.bool.isRequired,\n\n  /**\n   * If `true`, show the last-page button.\n   */\n  showLastButton: PropTypes.bool.isRequired\n} : void 0;\nexport default TablePaginationActions;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { getTabPanelUtilityClass } from './tabPanelClasses';\nimport { getPanelId, getTabId, useTabContext } from '../TabContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTabPanelUtilityClass, classes);\n};\n\nconst TabPanelRoot = styled('div', {\n  name: 'MuiTabPanel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(3)\n}));\nconst TabPanel = /*#__PURE__*/React.forwardRef(function TabPanel(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTabPanel'\n  });\n\n  const {\n    children,\n    className,\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props);\n\n  const classes = useUtilityClasses(ownerState);\n  const context = useTabContext();\n\n  if (context === null) {\n    throw new TypeError('No TabContext provided');\n  }\n\n  const id = getPanelId(context, value);\n  const tabId = getTabId(context, value);\n  return /*#__PURE__*/_jsx(TabPanelRoot, _extends({\n    \"aria-labelledby\": tabId,\n    className: clsx(classes.root, className),\n    hidden: value !== context.value,\n    id: id,\n    ref: ref,\n    role: \"tabpanel\",\n    ownerState: ownerState\n  }, other, {\n    children: value === context.value && children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabPanel.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The `value` of the corresponding `Tab`. Must use the index of the `Tab` when\n   * no `value` was passed to `Tab`.\n   */\n  value: PropTypes.string.isRequired\n} : void 0;\nexport default TabPanel;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"\n}), 'LastPage');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"\n}), 'FirstPage');","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTablePaginationUtilityClass(slot) {\n  return generateUtilityClass('MuiTablePagination', slot);\n}\nconst tablePaginationClasses = generateUtilityClasses('MuiTablePagination', ['root', 'toolbar', 'spacer', 'selectLabel', 'selectRoot', 'select', 'selectIcon', 'input', 'menuItem', 'displayedRows', 'actions']);\nexport default tablePaginationClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _InputBase;\n\nconst _excluded = [\"ActionsComponent\", \"backIconButtonProps\", \"className\", \"colSpan\", \"component\", \"count\", \"getItemAriaLabel\", \"labelDisplayedRows\", \"labelRowsPerPage\", \"nextIconButtonProps\", \"onPageChange\", \"onRowsPerPageChange\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"SelectProps\", \"showFirstButton\", \"showLastButton\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes, integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses, isHostComponent } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport InputBase from '../InputBase';\nimport MenuItem from '../MenuItem';\nimport Select from '../Select';\nimport TableCell from '../TableCell';\nimport Toolbar from '../Toolbar';\nimport TablePaginationActions from './TablePaginationActions';\nimport useId from '../utils/useId';\nimport tablePaginationClasses, { getTablePaginationUtilityClass } from './tablePaginationClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TablePaginationRoot = styled(TableCell, {\n  name: 'MuiTablePagination',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  overflow: 'auto',\n  color: (theme.vars || theme).palette.text.primary,\n  fontSize: theme.typography.pxToRem(14),\n  // Increase the specificity to override TableCell.\n  '&:last-child': {\n    padding: 0\n  }\n}));\nconst TablePaginationToolbar = styled(Toolbar, {\n  name: 'MuiTablePagination',\n  slot: 'Toolbar',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${tablePaginationClasses.actions}`]: styles.actions\n  }, styles.toolbar)\n})(({\n  theme\n}) => ({\n  minHeight: 52,\n  paddingRight: 2,\n  [`${theme.breakpoints.up('xs')} and (orientation: landscape)`]: {\n    minHeight: 52\n  },\n  [theme.breakpoints.up('sm')]: {\n    minHeight: 52,\n    paddingRight: 2\n  },\n  [`& .${tablePaginationClasses.actions}`]: {\n    flexShrink: 0,\n    marginLeft: 20\n  }\n}));\nconst TablePaginationSpacer = styled('div', {\n  name: 'MuiTablePagination',\n  slot: 'Spacer',\n  overridesResolver: (props, styles) => styles.spacer\n})({\n  flex: '1 1 100%'\n});\nconst TablePaginationSelectLabel = styled('p', {\n  name: 'MuiTablePagination',\n  slot: 'SelectLabel',\n  overridesResolver: (props, styles) => styles.selectLabel\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  flexShrink: 0\n}));\nconst TablePaginationSelect = styled(Select, {\n  name: 'MuiTablePagination',\n  slot: 'Select',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${tablePaginationClasses.selectIcon}`]: styles.selectIcon,\n    [`& .${tablePaginationClasses.select}`]: styles.select\n  }, styles.input, styles.selectRoot)\n})({\n  color: 'inherit',\n  fontSize: 'inherit',\n  flexShrink: 0,\n  marginRight: 32,\n  marginLeft: 8,\n  [`& .${tablePaginationClasses.select}`]: {\n    paddingLeft: 8,\n    paddingRight: 24,\n    textAlign: 'right',\n    textAlignLast: 'right' // Align <select> on Chrome.\n\n  }\n});\nconst TablePaginationMenuItem = styled(MenuItem, {\n  name: 'MuiTablePagination',\n  slot: 'MenuItem',\n  overridesResolver: (props, styles) => styles.menuItem\n})({});\nconst TablePaginationDisplayedRows = styled('p', {\n  name: 'MuiTablePagination',\n  slot: 'DisplayedRows',\n  overridesResolver: (props, styles) => styles.displayedRows\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  flexShrink: 0\n}));\n\nfunction defaultLabelDisplayedRows({\n  from,\n  to,\n  count\n}) {\n  return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n}\n\nfunction defaultGetAriaLabel(type) {\n  return `Go to ${type} page`;\n}\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    toolbar: ['toolbar'],\n    spacer: ['spacer'],\n    selectLabel: ['selectLabel'],\n    select: ['select'],\n    input: ['input'],\n    selectIcon: ['selectIcon'],\n    menuItem: ['menuItem'],\n    displayedRows: ['displayedRows'],\n    actions: ['actions']\n  };\n  return composeClasses(slots, getTablePaginationUtilityClass, classes);\n};\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\n\n\nconst TablePagination = /*#__PURE__*/React.forwardRef(function TablePagination(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTablePagination'\n  });\n\n  const {\n    ActionsComponent = TablePaginationActions,\n    backIconButtonProps,\n    className,\n    colSpan: colSpanProp,\n    component = TableCell,\n    count,\n    getItemAriaLabel = defaultGetAriaLabel,\n    labelDisplayedRows = defaultLabelDisplayedRows,\n    labelRowsPerPage = 'Rows per page:',\n    nextIconButtonProps,\n    onPageChange,\n    onRowsPerPageChange,\n    page,\n    rowsPerPage,\n    rowsPerPageOptions = [10, 25, 50, 100],\n    SelectProps = {},\n    showFirstButton = false,\n    showLastButton = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const MenuItemComponent = SelectProps.native ? 'option' : TablePaginationMenuItem;\n  let colSpan;\n\n  if (component === TableCell || component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n\n  const selectId = useId(SelectProps.id);\n  const labelId = useId(SelectProps.labelId);\n\n  const getLabelDisplayedRowsTo = () => {\n    if (count === -1) {\n      return (page + 1) * rowsPerPage;\n    }\n\n    return rowsPerPage === -1 ? count : Math.min(count, (page + 1) * rowsPerPage);\n  };\n\n  return /*#__PURE__*/_jsx(TablePaginationRoot, _extends({\n    colSpan: colSpan,\n    ref: ref,\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: /*#__PURE__*/_jsxs(TablePaginationToolbar, {\n      className: classes.toolbar,\n      children: [/*#__PURE__*/_jsx(TablePaginationSpacer, {\n        className: classes.spacer\n      }), rowsPerPageOptions.length > 1 && /*#__PURE__*/_jsx(TablePaginationSelectLabel, {\n        className: classes.selectLabel,\n        id: labelId,\n        children: labelRowsPerPage\n      }), rowsPerPageOptions.length > 1 && /*#__PURE__*/_jsx(TablePaginationSelect, _extends({\n        variant: \"standard\",\n        input: _InputBase || (_InputBase = /*#__PURE__*/_jsx(InputBase, {})),\n        value: rowsPerPage,\n        onChange: onRowsPerPageChange,\n        id: selectId,\n        labelId: labelId\n      }, SelectProps, {\n        classes: _extends({}, SelectProps.classes, {\n          // TODO v5 remove `classes.input`\n          root: clsx(classes.input, classes.selectRoot, (SelectProps.classes || {}).root),\n          select: clsx(classes.select, (SelectProps.classes || {}).select),\n          // TODO v5 remove `selectIcon`\n          icon: clsx(classes.selectIcon, (SelectProps.classes || {}).icon)\n        }),\n        children: rowsPerPageOptions.map(rowsPerPageOption => /*#__PURE__*/_createElement(MenuItemComponent, _extends({}, !isHostComponent(MenuItemComponent) && {\n          ownerState\n        }, {\n          className: classes.menuItem,\n          key: rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption,\n          value: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption\n        }), rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption))\n      })), /*#__PURE__*/_jsx(TablePaginationDisplayedRows, {\n        className: classes.displayedRows,\n        children: labelDisplayedRows({\n          from: count === 0 ? 0 : page * rowsPerPage + 1,\n          to: getLabelDisplayedRowsTo(),\n          count: count === -1 ? -1 : count,\n          page\n        })\n      }), /*#__PURE__*/_jsx(ActionsComponent, {\n        className: classes.actions,\n        backIconButtonProps: backIconButtonProps,\n        count: count,\n        nextIconButtonProps: nextIconButtonProps,\n        onPageChange: onPageChange,\n        page: page,\n        rowsPerPage: rowsPerPage,\n        showFirstButton: showFirstButton,\n        showLastButton: showLastButton,\n        getItemAriaLabel: getItemAriaLabel\n      })]\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a HTML element or a component.\n   * @default TablePaginationActions\n   */\n  ActionsComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the back arrow [`IconButton`](/material-ui/api/icon-button/) component.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The total number of rows.\n   *\n   * To enable server side pagination for an unknown number of items, provide -1.\n   */\n  count: integerPropType.isRequired,\n\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\n   * This is important for screen reader users.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @param {string} type The link or button type to format ('first' | 'last' | 'next' | 'previous').\n   * @returns {string}\n   * @default function defaultGetAriaLabel(type) {\n   *   return `Go to ${type} page`;\n   * }\n   */\n  getItemAriaLabel: PropTypes.func,\n\n  /**\n   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`\n   * object.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default function defaultLabelDisplayedRows({ from, to, count }) {\n   *   return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n   * }\n   */\n  labelDisplayedRows: PropTypes.func,\n\n  /**\n   * Customize the rows per page label.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Rows per page:'\n   */\n  labelRowsPerPage: PropTypes.node,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/material-ui/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {React.MouseEvent<HTMLButtonElement> | null} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.\n   */\n  onRowsPerPageChange: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(integerPropType.isRequired, props => {\n    const {\n      count,\n      page,\n      rowsPerPage\n    } = props;\n\n    if (count === -1) {\n      return null;\n    }\n\n    const newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n\n    if (page < 0 || page > newLastPage) {\n      return new Error('MUI: The page prop of a TablePagination is out of range ' + `(0 to ${newLastPage}, but page is ${page}).`);\n    }\n\n    return null;\n  }),\n\n  /**\n   * The number of rows per page.\n   *\n   * Set -1 to display all the rows.\n   */\n  rowsPerPage: integerPropType.isRequired,\n\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   * Use -1 for the value with a custom label to show all the rows.\n   * @default [10, 25, 50, 100]\n   */\n  rowsPerPageOptions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired\n  })]).isRequired),\n\n  /**\n   * Props applied to the rows per page [`Select`](/material-ui/api/select/) element.\n   * @default {}\n   */\n  SelectProps: PropTypes.object,\n\n  /**\n   * If `true`, show the first-page button.\n   * @default false\n   */\n  showFirstButton: PropTypes.bool,\n\n  /**\n   * If `true`, show the last-page button.\n   * @default false\n   */\n  showLastButton: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TablePagination;","import axios from 'axios';\r\nimport { backend_base_url } from 'config/constants';\r\n\r\nexport const AddVideo = async (data) => {\r\n    try {\r\n        const response = await axios.post(`${backend_base_url}/training/add/video`, data);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport const AddPdf = async (data) => {\r\n    try {\r\n        console.log(data);\r\n        const response = await axios.post(`${backend_base_url}/training/add/pdf`, data);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport const AddTip = async (data) => {\r\n    try {\r\n        const response = await axios.post(`${backend_base_url}/training/add/tip`, data);\r\n        return response.data;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TablePagination,\r\n    TableRow,\r\n    Paper,\r\n    Grid,\r\n    Box,\r\n    Typography,\r\n    Button,\r\n    Stack\r\n} from '@mui/material';\r\nimport '../../style.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { showAlert } from 'store/reducers/alert';\r\nimport { getAllVideo } from 'store/reducers/training';\r\nimport { AddVideo } from 'hook/training';\r\n\r\nconst columns = [\r\n    { id: 'name', label: 'Name', minWidth: 170 },\r\n    { id: 'url', label: 'URL', minWidth: 100 },\r\n    {\r\n        id: 'description',\r\n        label: 'Description',\r\n        minWidth: 170,\r\n        align: 'right'\r\n    },\r\n    {\r\n        id: 'createdAt',\r\n        label: 'Date',\r\n        minWidth: 170,\r\n        align: 'right',\r\n        format: (value) => value.toFixed(2)\r\n    }\r\n];\r\n\r\nfunction Video() {\r\n    const dispatch = useDispatch();\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n    const [name, setName] = useState('');\r\n    const [url, setUrl] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const training = useSelector((state) => state.training);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllVideo());\r\n    }, []);\r\n\r\n    const handleSubmit = () => {\r\n        const submitData = {\r\n            name: name,\r\n            url: url,\r\n            description: description\r\n        };\r\n        if (name && url && description) {\r\n            AddVideo(submitData).then((res) => {\r\n                if (res?.success) {\r\n                    setName('');\r\n                    setUrl('');\r\n                    setDescription('');\r\n                    dispatch(\r\n                        showAlert({\r\n                            message: res?.msg,\r\n                            severity: 'success'\r\n                        })\r\n                    );\r\n                    dispatch(getAllVideo());\r\n                } else {\r\n                    dispatch(\r\n                        showAlert({\r\n                            message: res?.msg,\r\n                            severity: 'error'\r\n                        })\r\n                    );\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setName('');\r\n        setUrl('');\r\n        setDescription('');\r\n    };\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={8}>\r\n                <Paper sx={{ width: '100%', overflow: 'hidden' }}>\r\n                    <TableContainer sx={{ maxHeight: 440 }}>\r\n                        <Table stickyHeader aria-label=\"sticky table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    {columns.map((column, key) => (\r\n                                        <TableCell key={key} align={column.align} style={{ minWidth: column.minWidth }}>\r\n                                            {column.label}\r\n                                        </TableCell>\r\n                                    ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {training?.videos?.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, key) => {\r\n                                    return (\r\n                                        <TableRow hover role=\"checkbox\" tabIndex={-1} key={key}>\r\n                                            {columns.map((column, key) => {\r\n                                                const value = row[column.id];\r\n                                                return (\r\n                                                    <TableCell key={key} align={column.align}>\r\n                                                        {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                                                    </TableCell>\r\n                                                );\r\n                                            })}\r\n                                        </TableRow>\r\n                                    );\r\n                                })}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                    <TablePagination\r\n                        rowsPerPageOptions={[10, 25, 100]}\r\n                        component=\"div\"\r\n                        count={training?.videos?.length}\r\n                        rowsPerPage={rowsPerPage}\r\n                        page={page}\r\n                        onPageChange={handleChangePage}\r\n                        onRowsPerPageChange={handleChangeRowsPerPage}\r\n                    />\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={4} style={{ display: 'block' }}>\r\n                <Box className=\"box\">\r\n                    <Typography>Name</Typography>\r\n                    <input className=\"input\" value={name} onChange={(e) => setName(e.target.value)} />\r\n                </Box>\r\n                <Box className=\"box\">\r\n                    <Typography>URL</Typography>\r\n                    <input className=\"input\" value={url} onChange={(e) => setUrl(e.target.value)} />\r\n                </Box>\r\n                <Box className=\"box\">\r\n                    <Typography>Description</Typography>\r\n                    <textarea className=\"textarea\" rows=\"10\" value={description} onChange={(e) => setDescription(e.target.value)} />\r\n                </Box>\r\n                <Stack className=\"buttonBox\" direction=\"row\" spacing={2}>\r\n                    <Button onClick={handleSubmit} variant=\"contained\" size=\"medium\">\r\n                        Save\r\n                    </Button>\r\n                    <Button onClick={handleCancel} variant=\"outlined\" size=\"medium\">\r\n                        Cancel\r\n                    </Button>\r\n                </Stack>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Video;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TablePagination,\r\n    TableRow,\r\n    Paper,\r\n    Grid,\r\n    Box,\r\n    Typography,\r\n    Button,\r\n    Stack\r\n} from '@mui/material';\r\nimport '../../style.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { showAlert } from 'store/reducers/alert';\r\nimport { getAllPdf } from 'store/reducers/training';\r\nimport { AddPdf } from 'hook/training';\r\n\r\nconst columns = [\r\n    { id: 'name', label: 'Name', minWidth: 170 },\r\n    {\r\n        id: 'description',\r\n        label: 'Description',\r\n        minWidth: 170,\r\n        align: 'right'\r\n    },\r\n    {\r\n        id: 'createdAt',\r\n        label: 'Date',\r\n        minWidth: 170,\r\n        align: 'right',\r\n        format: (value) => value.toFixed(2)\r\n    }\r\n];\r\n\r\nfunction PDF() {\r\n    const dispatch = useDispatch();\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n    const [file, setFile] = useState();\r\n    const [name, setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const hiddenFileInput = React.useRef(null);\r\n    const training = useSelector((state) => state.training);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllPdf());\r\n    }, []);\r\n\r\n    const handleSubmit = () => {\r\n        const submitData = new FormData();\r\n        submitData.append('file', file);\r\n        submitData.append('name', name);\r\n        submitData.append('description', description);\r\n\r\n        if (file && name && description) {\r\n            AddPdf(submitData).then((res) => {\r\n                if (res?.success) {\r\n                    setFile('');\r\n                    setName('');\r\n                    setDescription('');\r\n                    dispatch(\r\n                        showAlert({\r\n                            message: res?.msg,\r\n                            severity: 'success'\r\n                        })\r\n                    );\r\n                    dispatch(getAllPdf());\r\n                } else {\r\n                    dispatch(\r\n                        showAlert({\r\n                            message: res?.msg,\r\n                            severity: 'error'\r\n                        })\r\n                    );\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        file();\r\n        setName('');\r\n        setDescription('');\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setFile(event.target.files[0]);\r\n    };\r\n\r\n    const handleUploadFile = () => {\r\n        hiddenFileInput.current.click();\r\n    };\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={8}>\r\n                <Paper sx={{ width: '100%', overflow: 'hidden' }}>\r\n                    <TableContainer sx={{ maxHeight: 440 }}>\r\n                        <Table stickyHeader aria-label=\"sticky table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    {columns.map((column, key) => (\r\n                                        <TableCell key={key} align={column.align} style={{ minWidth: column.minWidth }}>\r\n                                            {column.label}\r\n                                        </TableCell>\r\n                                    ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {training?.pdfs?.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, key) => {\r\n                                    return (\r\n                                        <TableRow hover role=\"checkbox\" tabIndex={-1} key={key}>\r\n                                            {columns.map((column, key) => {\r\n                                                const value = row[column.id];\r\n                                                return (\r\n                                                    <TableCell key={key} align={column.align}>\r\n                                                        {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                                                    </TableCell>\r\n                                                );\r\n                                            })}\r\n                                        </TableRow>\r\n                                    );\r\n                                })}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                    <TablePagination\r\n                        rowsPerPageOptions={[10, 25, 100]}\r\n                        component=\"div\"\r\n                        count={training?.pdfs?.length}\r\n                        rowsPerPage={rowsPerPage}\r\n                        page={page}\r\n                        onPageChange={handleChangePage}\r\n                        onRowsPerPageChange={handleChangeRowsPerPage}\r\n                    />\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={4} style={{ display: 'block' }}>\r\n                <Box className=\"box\">\r\n                    <Typography>File</Typography>\r\n                    <button onClick={handleUploadFile} className=\"input\">\r\n                        {file?.name !== undefined ? file?.name : 'Upload a PDF file'}\r\n                    </button>\r\n                    <input hidden type=\"file\" onChange={handleChange} ref={hiddenFileInput} />\r\n                </Box>\r\n                <Box className=\"box\">\r\n                    <Typography>Name</Typography>\r\n                    <input className=\"input\" value={name} onChange={(e) => setName(e.target.value)} />\r\n                </Box>\r\n                <Box className=\"box\">\r\n                    <Typography>Description</Typography>\r\n                    <textarea className=\"textarea\" rows=\"10\" value={description} onChange={(e) => setDescription(e.target.value)} />\r\n                </Box>\r\n                <Stack className=\"buttonBox\" direction=\"row\" spacing={2}>\r\n                    <Button onClick={handleSubmit} variant=\"contained\" size=\"medium\">\r\n                        Save\r\n                    </Button>\r\n                    <Button onClick={handleCancel} variant=\"outlined\" size=\"medium\">\r\n                        Cancel\r\n                    </Button>\r\n                </Stack>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default PDF;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TablePagination,\r\n    TableRow,\r\n    Paper,\r\n    Box,\r\n    Button,\r\n    Modal,\r\n    Typography,\r\n    Stack\r\n} from '@mui/material';\r\nimport '../../style.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { showAlert } from 'store/reducers/alert';\r\nimport { getAllTip } from 'store/reducers/training';\r\nimport { AddTip } from 'hook/training';\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    pt: 2,\r\n    px: 4,\r\n    pb: 3\r\n};\r\n\r\nconst columns = [\r\n    { id: 'title', label: 'Title', minWidth: 170 },\r\n    {\r\n        id: 'subTitle',\r\n        label: 'SubTitle',\r\n        minWidth: 170,\r\n        align: 'right'\r\n    },\r\n    {\r\n        id: 'content',\r\n        label: 'Content',\r\n        minWidth: 170,\r\n        align: 'right',\r\n        format: (value) => value.toFixed(2)\r\n    },\r\n    {\r\n        id: 'createdAt',\r\n        label: 'Date',\r\n        minWidth: 170,\r\n        align: 'right',\r\n        format: (value) => value.toFixed(2)\r\n    }\r\n];\r\n\r\nfunction Tip() {\r\n    const dispatch = useDispatch();\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [title, setTitle] = useState('');\r\n    const [subTitle, setSubTitle] = useState('');\r\n    const [content, setContent] = useState('');\r\n    const training = useSelector((state) => state.training);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllTip());\r\n    }, []);\r\n\r\n    const handleSubmit = () => {\r\n        const submitData = {\r\n            title: title,\r\n            subTitle: subTitle,\r\n            content: content\r\n        };\r\n\r\n        if (title && subTitle && content) {\r\n            AddTip(submitData).then((res) => {\r\n                if (res?.success) {\r\n                    setTitle('');\r\n                    setSubTitle('');\r\n                    setContent('');\r\n                    dispatch(\r\n                        showAlert({\r\n                            message: res?.msg,\r\n                            severity: 'success'\r\n                        })\r\n                    );\r\n                    dispatch(getAllTip());\r\n                } else {\r\n                    dispatch(\r\n                        showAlert({\r\n                            message: res?.msg,\r\n                            severity: 'error'\r\n                        })\r\n                    );\r\n                }\r\n            });\r\n            setOpen(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button onClick={handleOpen} variant=\"contained\" size=\"medium\">\r\n                Add new Tip of Week\r\n            </Button>\r\n            <Paper sx={{ width: '100%', overflow: 'hidden' }}>\r\n                <TableContainer sx={{ maxHeight: 440, marginTop: '20px' }}>\r\n                    <Table stickyHeader aria-label=\"sticky table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                {columns.map((column, key) => (\r\n                                    <TableCell key={key} align={column.align} style={{ minWidth: column.minWidth }}>\r\n                                        {column.label}\r\n                                    </TableCell>\r\n                                ))}\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {training?.tips?.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, key) => {\r\n                                return (\r\n                                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={key}>\r\n                                        {columns.map((column, key) => {\r\n                                            const value = row[column.id];\r\n                                            return (\r\n                                                <TableCell key={key} align={column.align}>\r\n                                                    {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                                                </TableCell>\r\n                                            );\r\n                                        })}\r\n                                    </TableRow>\r\n                                );\r\n                            })}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 100]}\r\n                    component=\"div\"\r\n                    count={training?.tips?.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onPageChange={handleChangePage}\r\n                    onRowsPerPageChange={handleChangeRowsPerPage}\r\n                />\r\n            </Paper>\r\n            <Modal open={open} onClose={handleClose} aria-labelledby=\"parent-modal-title\" aria-describedby=\"parent-modal-description\">\r\n                <Paper sx={{ ...style, width: '80%' }}>\r\n                    <h2 id=\"parent-modal-title\">Add new Tip of the week</h2>\r\n                    <Box className=\"box\">\r\n                        <Typography>Title</Typography>\r\n                        <input className=\"input\" value={title} onChange={(e) => setTitle(e.target.value)} />\r\n                    </Box>\r\n                    <Box className=\"box\">\r\n                        <Typography>Sub Title</Typography>\r\n                        <input className=\"input\" value={subTitle} onChange={(e) => setSubTitle(e.target.value)} />\r\n                    </Box>\r\n                    <Box className=\"box\">\r\n                        <Typography>Content</Typography>\r\n                        <textarea className=\"textarea\" rows=\"10\" value={content} onChange={(e) => setContent(e.target.value)} />\r\n                    </Box>\r\n                    <Stack className=\"buttonBox\" direction=\"row\" spacing={2}>\r\n                        <Button onClick={handleSubmit} variant=\"contained\" size=\"medium\">\r\n                            Save\r\n                        </Button>\r\n                        <Button onClick={handleClose} variant=\"outlined\" size=\"medium\">\r\n                            Cancel\r\n                        </Button>\r\n                    </Stack>\r\n                </Paper>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Tip;\r\n","import { useState } from 'react';\r\nimport { Tab, Box } from '@mui/material';\r\nimport { TabContext, TabList, TabPanel } from '@mui/lab';\r\nimport MainCard from 'components/MainCard';\r\nimport Video from './components/video/index';\r\nimport PDF from './components/pdf/index';\r\nimport Tip from './components/tip/index';\r\n\r\nfunction Training() {\r\n    const [tab, setTab] = useState('video');\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setTab(newValue);\r\n    };\r\n\r\n    return (\r\n        <MainCard title=\"My Training Management\">\r\n            <Box sx={{ width: '100%', typography: 'body1' }}>\r\n                <TabContext value={tab}>\r\n                    <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n                        <TabList onChange={handleChange} aria-label=\"lab API tabs example\">\r\n                            <Tab label=\"Video\" value=\"video\" />\r\n                            <Tab label=\"PDF\" value=\"pdf\" />\r\n                            <Tab label=\"Tip of the week\" value=\"tip\" />\r\n                        </TabList>\r\n                    </Box>\r\n                    <TabPanel value=\"video\">\r\n                        <Video />\r\n                    </TabPanel>\r\n                    <TabPanel value=\"pdf\">\r\n                        <PDF />\r\n                    </TabPanel>\r\n                    <TabPanel value=\"tip\">\r\n                        <Tip />\r\n                    </TabPanel>\r\n                </TabContext>\r\n            </Box>\r\n        </MainCard>\r\n    );\r\n}\r\n\r\nexport default Training;\r\n"],"sourceRoot":""}